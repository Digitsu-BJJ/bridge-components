// @joemasilotti/bridge-components@0.7.0 downloaded from https://ga.jspm.io/npm:@joemasilotti/bridge-components@0.7.0/web/controllers/index.js

import{BridgeComponent as t,BridgeElement as e}from"@hotwired/hotwire-native-bridge";class AlertBridgeController extends t{static component="alert";#t=true;show(t){if(this.#t){t.stopImmediatePropagation();t.preventDefault();this.#e()}}#e(){const t=this.bridgeElement;const e=t.title||"Are you sure?";const o=t.bridgeAttribute("description");const n=t.bridgeAttribute("destructive")=="true";const r=t.bridgeAttribute("confirm")||"OK";const i=t.bridgeAttribute("dismiss")||"Cancel";const s={title:e,description:o,destructive:n,confirm:r,dismiss:i};this.send("show",s,(()=>{this.#t=false;this.bridgeElement.click();this.#t=true}))}}class BarcodeScannerBridgeController extends t{static component="barcode-scanner";static targets=["result"];scan(t){t.stopImmediatePropagation();t.preventDefault();this.#o()}#o(){this.resultTarget.innerHTML="";this.send("scan",{},(t=>{const e=t.data.barcode;this.resultTarget.innerHTML=`You scanned <code>${e}</code>.`}))}}class BiometricsLockBridgeController extends t{static component="biometrics-lock";connect(){super.connect();this.send("reenable")}enable(){this.send("enable")}disable(){this.send("disable")}}class ButtonBridgeController extends t{static component="button";connect(){super.connect();this.#n()}disconnect(){super.disconnect();this.#r()}#n(){const t=this.bridgeElement;const e=t.bridgeAttribute("side")||"right";const o=t.bridgeAttribute("ios-image");const n=t.bridgeAttribute("android-image");const r={title:t.title,iosImage:o,androidImage:n};this.send(e,r,(()=>{this.element.click()}))}#r(){this.send("disconnect")}}class DocumentScannerBridgeController extends t{static component="document-scanner";static targets=["result"];scan(t){t.stopImmediatePropagation();t.preventDefault();this.#o()}#o(){this.resultTarget.innerHTML="";this.send("scan",{},(t=>{const e=t.data.imageData;const o=this.#i(e.trim(),"image/jpeg");const n=URL.createObjectURL(o);const r=document.createElement("img");r.src=n;this.resultTarget.appendChild(r);r.onload=()=>URL.revokeObjectURL(n)}))}#i(t,e){const o=atob(t);const n=new Array(o.length);for(let t=0;t<o.length;t++)n[t]=o.charCodeAt(t);const r=new Uint8Array(n);return new Blob([r],{type:e})}}class FormBridgeController extends t{static component="form";static targets=["submit"];connect(){super.connect();this.#n()}disconnect(){super.disconnect();this.#r()}submitStart(t){this.submitTarget.disabled=true;this.send("disableSubmit")}submitEnd(t){this.submitTarget.disabled=false;this.send("enableSubmit")}#n(){const t=new e(this.submitTarget);this.send("connect",{title:t.title},(()=>{this.submitTarget.click()}))}#r(){this.send("disconnect")}}class HapticBridgeController extends t{static component="haptic";vibrate(){const t=this.bridgeElement;const e=t.bridgeAttribute("feedback")||"success";this.send("vibrate",{feedback:e})}}class LocationBridgeController extends t{static component="location";static targets=["result"];get(t){t.stopImmediatePropagation();t.preventDefault();this.#s()}#s(){this.send("get",{},(t=>{const{latitude:e,longitude:o}=t.data;this.resultTarget.innerText=e===void 0||o===void 0?"Your location could not be found. Did you grant location permission?":`Your location is ${e}, ${o}.`}))}}class MenuBridgeController extends t{static component="menu";static targets=["item"];connect(){super.connect();this.#c()}disconnect(){super.disconnect();this.#a()}#c(){const t=this.itemTargets.map((t=>{const o=new e(t);return{title:o.title,iosImage:o.bridgeAttribute("ios-image"),androidImage:o.bridgeAttribute("android-image")}}));this.send("connect",{items:t},(t=>{const o=this.itemTargets[t.data.index];new e(o).click()}))}#a(){this.send("disconnect")}}class NotificationTokenBridgeController extends t{static component="notification-token";static targets=["token"];connect(){super.connect();this.send("connect")}get(t){t.stopImmediatePropagation();t.preventDefault();this.#d()}#d(){this.send("get",{},(t=>{const e=t.data.token;this.tokenTarget.innerText=`Your notification token is: ${e}.`}))}}class PermissionsBridgeController extends t{static component="permissions";static targets=["cameraStatus","cameraCode","locationStatus","locationCode","notificationsStatus","notificationsCode"];connect(){super.connect();this.#l();this.#s();this.#g()}#l(){this.send("camera",{},(t=>{const{code:e,text:o}=t.data;this.cameraStatusTarget.innerText=o;this.cameraCodeTarget.innerHTML=`<code>${e}</code>`}))}#s(){this.send("location",{},(t=>{const{code:e,text:o}=t.data;this.locationStatusTarget.innerText=o;this.locationCodeTarget.innerHTML=`<code>${e}</code>`}))}#g(){this.send("notifications",{},(t=>{const{code:e,text:o}=t.data;this.notificationsStatusTarget.innerText=o;this.notificationsCodeTarget.innerHTML=`<code>${e}</code>`}))}}class ReviewPromptBridgeController extends t{static component="review-prompt";prompt(t){t.stopImmediatePropagation();t.preventDefault();this.#m()}#m(){this.send("prompt")}}class SearchBridgeController extends t{static component="search";static values={items:Array};connect(){super.connect();this.#u(this.itemsValue);this.send("connect",{},(t=>{const e=t.data.query;const o=this.itemsValue.filter((t=>t.toLowerCase().includes(e.toLowerCase())));this.#u(o)}))}#u(t){this.element.innerHTML="";t.forEach((t=>{const e=document.createElement("a");e.href=`/components/searches/${encodeURIComponent(t)}`;e.className="list-group-item list-group-item-action";e.textContent=t;this.element.appendChild(e)}))}}class ShareBridgeController extends t{static component="share";connect(){super.connect();this.#n()}#n(){const t=window.location.href;this.send("connect",{url:t},(()=>{}))}}class ThemeBridgeController extends t{static component="theme";static values={theme:String};connect(){super.connect();this.#h()}themeValueChanged(){this.#h()}#h(){const t=this.themeValue;this.send("connect",{theme:t})}}class ToastBridgeController extends t{static component="toast";show(t){t.stopImmediatePropagation();t.preventDefault();this.#p()}#p(){const t=this.bridgeElement.bridgeAttribute("message");this.send("show",{message:t},(()=>{}))}}
/** @type {import("@hotwired/stimulus").Definition[]} */const o=[{identifier:"bridge--alert",controllerConstructor:AlertBridgeController},{identifier:"bridge--barcode-scanner",controllerConstructor:BarcodeScannerBridgeController},{identifier:"bridge--biometrics-lock",controllerConstructor:BiometricsLockBridgeController},{identifier:"bridge--button",controllerConstructor:ButtonBridgeController},{identifier:"bridge--document-scanner",controllerConstructor:DocumentScannerBridgeController},{identifier:"bridge--form",controllerConstructor:FormBridgeController},{identifier:"bridge--haptic",controllerConstructor:HapticBridgeController},{identifier:"bridge--location",controllerConstructor:LocationBridgeController},{identifier:"bridge--menu",controllerConstructor:MenuBridgeController},{identifier:"bridge--notification-token",controllerConstructor:NotificationTokenBridgeController},{identifier:"bridge--permissions",controllerConstructor:PermissionsBridgeController},{identifier:"bridge--review-prompt",controllerConstructor:ReviewPromptBridgeController},{identifier:"bridge--search",controllerConstructor:SearchBridgeController},{identifier:"bridge--share",controllerConstructor:ShareBridgeController},{identifier:"bridge--theme",controllerConstructor:ThemeBridgeController},{identifier:"bridge--toast",controllerConstructor:ToastBridgeController}];export{AlertBridgeController,BarcodeScannerBridgeController,BiometricsLockBridgeController,ButtonBridgeController,DocumentScannerBridgeController,FormBridgeController,HapticBridgeController,LocationBridgeController,MenuBridgeController,NotificationTokenBridgeController,PermissionsBridgeController,ReviewPromptBridgeController,SearchBridgeController,ShareBridgeController,ThemeBridgeController,ToastBridgeController,o as controllers};
